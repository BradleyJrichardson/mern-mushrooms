{"ast":null,"code":"var _jsxFileName = \"/Users/bjricho/javascript/react/mushroom/front-end/src/components/utils/IndexCard.js\";\nimport React from \"react\";\nimport Image from \"./Image\";\n\nconst IndexCard = props => {\n  let _props$mushroom = props.mushroom,\n      common_name = _props$mushroom.common_name,\n      binomial_name = _props$mushroom.binomial_name,\n      division = _props$mushroom.division,\n      mush_class = _props$mushroom.mush_class,\n      family = _props$mushroom.family,\n      order = _props$mushroom.order,\n      description = _props$mushroom.description,\n      mycology = _props$mushroom.mycology,\n      images = _props$mushroom.images;\n  let cap_type = mycology.cap_type,\n      hymenium_shape_type = mycology.hymenium_shape_type,\n      hymenium_spore_type = mycology.hymenium_spore_type,\n      stipe_type = mycology.stipe_type,\n      edibility_type = mycology.edibility_type;\n  const commonNames = common_name.map((name, index) => React.createElement(\"div\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, name));\n  const mushImages = images.map((image, index) => {\n    React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, image);\n  });\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, binomial_name), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, commonNames), React.createElement(\"div\", {\n    className: \"italic project-about\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, description, \" \"), React.createElement(\"div\", {\n    className: \"project-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, division), React.createElement(\"div\", {\n    className: \"project-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \" \", mush_class), React.createElement(\"div\", {\n    className: \"project-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \" \", family), React.createElement(\"div\", {\n    className: \"project-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \" \", order), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Mycology\"), React.createElement(\"div\", {\n    className: \"project-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \" \", cap_type), React.createElement(\"div\", {\n    className: \"project-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \" \", hymenium_shape_type), React.createElement(\"div\", {\n    className: \"project-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \" \", hymenium_spore_type), React.createElement(\"div\", {\n    className: \"project-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \" \", stipe_type), React.createElement(\"div\", {\n    className: \"project-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \" \", edibility_type), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, mushImages)));\n};\n\nexport default IndexCard;","map":{"version":3,"sources":["/Users/bjricho/javascript/react/mushroom/front-end/src/components/utils/IndexCard.js"],"names":["React","Image","IndexCard","props","mushroom","common_name","binomial_name","division","mush_class","family","order","description","mycology","images","cap_type","hymenium_shape_type","hymenium_spore_type","stipe_type","edibility_type","commonNames","map","name","index","mushImages","image"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Image from \"./Image\";\n\nconst IndexCard = props => {\n  let {\n    common_name,\n    binomial_name,\n    division,\n    mush_class,\n    family,\n    order,\n    description,\n    mycology,\n    images\n  } = props.mushroom;\n\n  let {\n    cap_type,\n    hymenium_shape_type,\n    hymenium_spore_type,\n    stipe_type,\n    edibility_type\n  } = mycology;\n\n  const commonNames = common_name.map((name, index) => (\n    <div key={index}>{name}</div>\n  ));\n  const mushImages = images.map((image, index) => {\n    <div key={index}>{image}</div>;\n  });\n\n  return (\n    <React.Fragment>\n      <div className=\"card\">\n        <h3>{binomial_name}</h3>\n        <div>{commonNames}</div>\n        <div className=\"italic project-about\">{description} </div>\n        <div className=\"project-text\">{division}</div>\n        <div className=\"project-text\"> {mush_class}</div>\n        <div className=\"project-text\"> {family}</div>\n        <div className=\"project-text\"> {order}</div>\n        <h1>Mycology</h1>\n        <div className=\"project-text\"> {cap_type}</div>\n        <div className=\"project-text\"> {hymenium_shape_type}</div>\n        <div className=\"project-text\"> {hymenium_spore_type}</div>\n        <div className=\"project-text\"> {stipe_type}</div>\n        <div className=\"project-text\"> {edibility_type}</div>\n        <div>{mushImages}</div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default IndexCard;\n"]},"metadata":{},"sourceType":"module"}