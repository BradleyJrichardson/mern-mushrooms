{"ast":null,"code":"var _jsxFileName = \"/Users/bjricho/javascript/react/mushroom/front-end/src/components/utils/IndexCard.js\";\nimport React from \"react\";\nimport Image from \"./Image\";\n\nconst IndexCard = props => {\n  // common_name is an array of strings as the names\n  // and mycology is an object with structure\n  // mycology = {\n  //     cap_type: \"cap is flat or convex\";\n  //     edibility_type: \"edibility: edible\";\n  //     hymenium_shape_type: \"hymenium is adnate or decurrent\";\n  //     hymenium_spore_type: \"pores on hymenium\";\n  //     stipe_type: \"stipe is bare\";\n  // }\n  // console.log(props);\n  let _props$mushroom = props.mushroom,\n      common_name = _props$mushroom.common_name,\n      binomial_name = _props$mushroom.binomial_name,\n      division = _props$mushroom.division,\n      mush_class = _props$mushroom.mush_class,\n      family = _props$mushroom.family,\n      order = _props$mushroom.order,\n      description = _props$mushroom.description,\n      mycology = _props$mushroom.mycology,\n      images = _props$mushroom.images; // console.log(props.mushroom.common_name);\n\n  let cap_type = mycology.cap_type,\n      hymenium_shape_type = mycology.hymenium_shape_type,\n      hymenium_spore_type = mycology.hymenium_spore_type,\n      stipe_type = mycology.stipe_type,\n      edibility_type = mycology.edibility_type;\n  const commonNames = common_name.map((name, index) => React.createElement(\"div\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, name));\n  const mushImages = images.map((image, index) => {\n    React.createElement(\"img\", {\n      key: index,\n      src: image,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  });\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"test\"), React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, binomial_name), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, commonNames), React.createElement(\"div\", {\n    className: \"italic project-about\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, description, \" \"), React.createElement(\"div\", {\n    className: \"project-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, division), React.createElement(\"div\", {\n    className: \"project-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \" \", mush_class), React.createElement(\"div\", {\n    className: \"project-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \" \", family), React.createElement(\"div\", {\n    className: \"project-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \" \", order), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"mycology\"), React.createElement(\"div\", {\n    className: \"project-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \" \", order), React.createElement(\"div\", {\n    className: \"project-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \" \", order), React.createElement(\"div\", {\n    className: \"project-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \" \", order), React.createElement(\"div\", {\n    className: \"project-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \" \", order), React.createElement(\"div\", {\n    className: \"project-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \" \", order), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, mushImages)));\n};\n\nexport default IndexCard;","map":{"version":3,"sources":["/Users/bjricho/javascript/react/mushroom/front-end/src/components/utils/IndexCard.js"],"names":["React","Image","IndexCard","props","mushroom","common_name","binomial_name","division","mush_class","family","order","description","mycology","images","cap_type","hymenium_shape_type","hymenium_spore_type","stipe_type","edibility_type","commonNames","map","name","index","mushImages","image"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Image from \"./Image\";\n\nconst IndexCard = props => {\n  // common_name is an array of strings as the names\n  // and mycology is an object with structure\n  // mycology = {\n  //     cap_type: \"cap is flat or convex\";\n  //     edibility_type: \"edibility: edible\";\n  //     hymenium_shape_type: \"hymenium is adnate or decurrent\";\n  //     hymenium_spore_type: \"pores on hymenium\";\n  //     stipe_type: \"stipe is bare\";\n  // }\n\n  // console.log(props);\n\n  let {\n    common_name,\n    binomial_name,\n    division,\n    mush_class,\n    family,\n    order,\n    description,\n    mycology,\n    images\n  } = props.mushroom;\n  // console.log(props.mushroom.common_name);\n\n  let {\n    cap_type,\n    hymenium_shape_type,\n    hymenium_spore_type,\n    stipe_type,\n    edibility_type\n  } = mycology;\n\n  const commonNames = common_name.map((name, index) => (\n    <div key={index}>{name}</div>\n  ));\n\n  const mushImages = images.map((image, index) => {\n    <img key={index} src={image} alt=\"\" />;\n  });\n\n  return (\n    <React.Fragment>\n      <div>test</div>\n      <div className=\"card\">\n        <h3>{binomial_name}</h3>\n        <div>{commonNames}</div>\n        <div className=\"italic project-about\">{description} </div>\n        <div className=\"project-text\">{division}</div>\n        <div className=\"project-text\"> {mush_class}</div>\n        <div className=\"project-text\"> {family}</div>\n        <div className=\"project-text\"> {order}</div>\n        <h1>mycology</h1>\n        <div className=\"project-text\"> {order}</div>\n        <div className=\"project-text\"> {order}</div>\n        <div className=\"project-text\"> {order}</div>\n        <div className=\"project-text\"> {order}</div>\n        <div className=\"project-text\"> {order}</div>\n        <div>{mushImages}</div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default IndexCard;\n"]},"metadata":{},"sourceType":"module"}