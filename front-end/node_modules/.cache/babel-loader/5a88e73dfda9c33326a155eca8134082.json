{"ast":null,"code":"var _jsxFileName = \"/Users/bjricho/javascript/react/mushroom/front-end/src/components/utils/IndexCard.js\";\nimport React from \"react\";\n\nconst IndexCard = mushroom => {\n  // common_name is an array of strings as the names\n  // and mycology is an object with structure\n  // mycology = {\n  //     cap_type: \"cap is flat or convex\";\n  //     edibility_type: \"edibility: edible\";\n  //     hymenium_shape_type: \"hymenium is adnate or decurrent\";\n  //     hymenium_spore_type: \"pores on hymenium\";\n  //     stipe_type: \"stipe is bare\";\n  // }\n  let common_name = mushroom.common_name,\n      binomial_name = mushroom.binomial_name,\n      division = mushroom.division,\n      mush_class = mushroom.mush_class,\n      family = mushroom.family,\n      order = mushroom.order,\n      description = mushroom.description,\n      mycology = mushroom.mycology;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Image, {\n    src: img,\n    width: 330,\n    height: 280,\n    mode: \"fit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, bionomial_name), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"italic project-about\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, about, \" \"), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Techniques\"), React.createElement(\"div\", {\n    className: \"project-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, lessons), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Technologies\"), React.createElement(\"div\", {\n    className: \"project-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \" \", technologies), React.createElement(\"div\", {\n    className: \"float-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"center-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Type\"), React.createElement(\"div\", {\n    className: \"project-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, type)), React.createElement(\"div\", {\n    className: \"project-link-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"project-link\",\n    href: githublink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    text: \"Github\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(FaGithubAlt, {\n    color: \"rgb(255, 215, 0)\",\n    size: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }))), React.createElement(\"a\", {\n    className: \"project-link\",\n    href: livelink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    text: \"Live Application\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(FaSignInAlt, {\n    color: \"rgb(255, 215, 0)\",\n    size: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })))))));\n};\n\nexport default IndexCard;","map":{"version":3,"sources":["/Users/bjricho/javascript/react/mushroom/front-end/src/components/utils/IndexCard.js"],"names":["React","IndexCard","mushroom","common_name","binomial_name","division","mush_class","family","order","description","mycology","img","bionomial_name","about","lessons","technologies","type","githublink","livelink"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAGC,QAAQ,IAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAT4B,MAY1BC,WAZ0B,GAoBxBD,QApBwB,CAY1BC,WAZ0B;AAAA,MAa1BC,aAb0B,GAoBxBF,QApBwB,CAa1BE,aAb0B;AAAA,MAc1BC,QAd0B,GAoBxBH,QApBwB,CAc1BG,QAd0B;AAAA,MAe1BC,UAf0B,GAoBxBJ,QApBwB,CAe1BI,UAf0B;AAAA,MAgB1BC,MAhB0B,GAoBxBL,QApBwB,CAgB1BK,MAhB0B;AAAA,MAiB1BC,KAjB0B,GAoBxBN,QApBwB,CAiB1BM,KAjB0B;AAAA,MAkB1BC,WAlB0B,GAoBxBP,QApBwB,CAkB1BO,WAlB0B;AAAA,MAmB1BC,QAnB0B,GAoBxBR,QApBwB,CAmB1BQ,QAnB0B;AAqB5B,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEC,GAAZ;AAAiB,IAAA,KAAK,EAAE,GAAxB;AAA6B,IAAA,MAAM,EAAE,GAArC;AAA0C,IAAA,IAAI,EAAC,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,cAAL,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCC,KAAvC,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BC,OAA/B,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,EAKE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAgCC,YAAhC,CALF,EAME;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BC,IAA/B,CAFF,CANF,EAUE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,cAAb;AAA4B,IAAA,IAAI,EAAEC,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,kBAAnB;AAAsC,IAAA,IAAI,EAAE,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAOE;AAAG,IAAA,SAAS,EAAC,cAAb;AAA4B,IAAA,IAAI,EAAEC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,kBAAnB;AAAsC,IAAA,IAAI,EAAE,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAPF,CAVF,CAHF,CADF,CADF;AAgCD,CArDD;;AAuDA,eAAejB,SAAf","sourcesContent":["import React from \"react\";\n\nconst IndexCard = mushroom => {\n  // common_name is an array of strings as the names\n  // and mycology is an object with structure\n  // mycology = {\n  //     cap_type: \"cap is flat or convex\";\n  //     edibility_type: \"edibility: edible\";\n  //     hymenium_shape_type: \"hymenium is adnate or decurrent\";\n  //     hymenium_spore_type: \"pores on hymenium\";\n  //     stipe_type: \"stipe is bare\";\n  // }\n\n  let {\n    common_name,\n    binomial_name,\n    division,\n    mush_class,\n    family,\n    order,\n    description,\n    mycology\n  } = mushroom;\n  return (\n    <React.Fragment>\n      <div className=\"card\">\n        <Image src={img} width={330} height={280} mode=\"fit\" />\n        <h3>{bionomial_name}</h3>\n        <div>\n          <div className=\"italic project-about\">{about} </div>\n          <h4>Techniques</h4>\n          <div className=\"project-text\">{lessons}</div>\n          <h4>Technologies</h4>\n          <div className=\"project-text\"> {technologies}</div>\n          <div className=\"float-right\">\n            <h4 className=\"center-text\">Type</h4>\n            <div className=\"project-text\">{type}</div>\n          </div>\n          <div className=\"project-link-container\">\n            <a className=\"project-link\" href={githublink}>\n              <Tooltip text=\"Github\">\n                <FaGithubAlt color=\"rgb(255, 215, 0)\" size={25} />\n              </Tooltip>\n            </a>\n\n            <a className=\"project-link\" href={livelink}>\n              <Tooltip text=\"Live Application\">\n                <FaSignInAlt color=\"rgb(255, 215, 0)\" size={25} />\n              </Tooltip>\n            </a>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default IndexCard;\n"]},"metadata":{},"sourceType":"module"}