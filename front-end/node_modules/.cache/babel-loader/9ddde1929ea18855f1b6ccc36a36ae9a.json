{"ast":null,"code":"var _jsxFileName = \"/Users/bjricho/javascript/react/mushroom/front-end/src/components/pages/Index.js\";\nimport React, { Component } from \"react\";\n\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadMushrooms = () => {\n      const url = \"http://localhost:5000/mushroom\";\n      fetch(url).then(resp => resp.json()).then(data => {\n        this.setState({\n          books: data,\n          adding: false,\n          selectedBook: null\n        });\n      });\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        adding: true\n      });\n    };\n\n    this.bookList = () => {\n      return React.createElement(\"div\", {\n        className: \"book-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.state.books.map((item, index) => React.createElement(\"div\", {\n        key: index,\n        className: \"book\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: () => this.handleEditClick(item),\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, item.genre, \": \", item.title, \" by \", item.author, \" (rrp $\", item.price, \") (id: \", item.id, \")\"))));\n    };\n\n    this.state = {\n      books: [],\n      adding: false,\n      selectedBook: null,\n      addBookAlert: false,\n      updateBookAlert: false\n    };\n  }\n\n  componentDidMount() {\n    this.loadMushrooms();\n  }\n\n  render() {\n    if (!this.state.books.length) {\n      return React.createElement(\"div\", {\n        className: \"spinner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(ReactLoading, {\n        type: \"spin\",\n        color: \"#e6e6e6\",\n        height: 667,\n        width: 375,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Books \", this.state.books.length), this.state.addBookAlert ? React.createElement(Alert, {\n        variant: \"success\",\n        onClose: this.handleDismiss,\n        dismissible: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Alert.Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Success adding book!\")) : null, this.state.updateBookAlert ? React.createElement(Alert, {\n        variant: \"success\",\n        onClose: this.handleDismiss,\n        dismissible: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Alert.Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Success updating Book!\")) : null, this.state.adding ? React.createElement(BookForm, {\n        createAndUpdateBook: this.createAndUpdateBookHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }) : this.state.selectedBook ? React.createElement(BookForm, {\n        createAndUpdateBook: this.createAndUpdateBookHandler,\n        title: this.state.selectedBook.title,\n        author: this.state.selectedBook.author,\n        genre: this.state.selectedBook.genre,\n        price: this.state.selectedBook.price,\n        id: this.state.selectedBook.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }) : this.bookList(), !this.state.adding && !this.state.selectedBook ? React.createElement(\"button\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Add\") : null);\n    }\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["/Users/bjricho/javascript/react/mushroom/front-end/src/components/pages/Index.js"],"names":["React","Component","Index","constructor","props","loadMushrooms","url","fetch","then","resp","json","data","setState","books","adding","selectedBook","handleClick","bookList","state","map","item","index","handleEditClick","genre","title","author","price","id","addBookAlert","updateBookAlert","componentDidMount","render","length","handleDismiss","createAndUpdateBookHandler"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: [],\n      adding: false,\n      selectedBook: null,\n      addBookAlert: false,\n      updateBookAlert: false\n    };\n  }\n  componentDidMount() {\n    this.loadMushrooms();\n  }\n\n  loadMushrooms = () => {\n    const url = \"http://localhost:5000/mushroom\";\n    fetch(url)\n      .then(resp => resp.json())\n      .then(data => {\n        this.setState({\n          books: data,\n          adding: false,\n          selectedBook: null\n        });\n      });\n  };\n\n  handleClick = () => {\n    this.setState({ adding: true });\n  };\n\n  bookList = () => {\n    return (\n      <div className=\"book-list\">\n        {this.state.books.map((item, index) => (\n          <div key={index} className=\"book\">\n            <div onClick={() => this.handleEditClick(item)} key={index}>\n              {item.genre}: {item.title} by {item.author} (rrp ${item.price})\n              (id: {item.id})\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  render() {\n    if (!this.state.books.length) {\n      return (\n        <div className=\"spinner\">\n          <ReactLoading\n            type={\"spin\"}\n            color={\"#e6e6e6\"}\n            height={667}\n            width={375}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <h1>Books {this.state.books.length}</h1>\n\n          {this.state.addBookAlert ? (\n            <Alert variant=\"success\" onClose={this.handleDismiss} dismissible>\n              <Alert.Heading>Success adding book!</Alert.Heading>\n            </Alert>\n          ) : null}\n\n          {this.state.updateBookAlert ? (\n            <Alert variant=\"success\" onClose={this.handleDismiss} dismissible>\n              <Alert.Heading>Success updating Book!</Alert.Heading>\n            </Alert>\n          ) : null}\n\n          {this.state.adding ? (\n            <BookForm createAndUpdateBook={this.createAndUpdateBookHandler} />\n          ) : this.state.selectedBook ? (\n            <BookForm\n              createAndUpdateBook={this.createAndUpdateBookHandler}\n              title={this.state.selectedBook.title}\n              author={this.state.selectedBook.author}\n              genre={this.state.selectedBook.genre}\n              price={this.state.selectedBook.price}\n              id={this.state.selectedBook.id}\n            />\n          ) : (\n            this.bookList()\n          )}\n\n          {!this.state.adding && !this.state.selectedBook ? (\n            <button onClick={this.handleClick}>Add</button>\n          ) : null}\n        </div>\n      );\n    }\n  }\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}